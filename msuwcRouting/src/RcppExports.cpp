// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// routeWaterLoop
List routeWaterLoop(int timeLength, CharacterVector edgeIDs, IntegerVector orders, NumericVector streamLengths, NumericVector streamWidths, NumericVector streamSlopes, NumericVector aCoeffs, NumericMatrix Rsurf, NumericMatrix Rsub, String by, List parentList, int spinUpYears, int spinUpCycles, double manningN, NumericVector vMonthConv, NumericVector beaverCoeff, NumericVector hillslopeLengths);
RcppExport SEXP _msuwcRouting_routeWaterLoop(SEXP timeLengthSEXP, SEXP edgeIDsSEXP, SEXP ordersSEXP, SEXP streamLengthsSEXP, SEXP streamWidthsSEXP, SEXP streamSlopesSEXP, SEXP aCoeffsSEXP, SEXP RsurfSEXP, SEXP RsubSEXP, SEXP bySEXP, SEXP parentListSEXP, SEXP spinUpYearsSEXP, SEXP spinUpCyclesSEXP, SEXP manningNSEXP, SEXP vMonthConvSEXP, SEXP beaverCoeffSEXP, SEXP hillslopeLengthsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type timeLength(timeLengthSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type edgeIDs(edgeIDsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type orders(ordersSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type streamLengths(streamLengthsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type streamWidths(streamWidthsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type streamSlopes(streamSlopesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type aCoeffs(aCoeffsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Rsurf(RsurfSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Rsub(RsubSEXP);
    Rcpp::traits::input_parameter< String >::type by(bySEXP);
    Rcpp::traits::input_parameter< List >::type parentList(parentListSEXP);
    Rcpp::traits::input_parameter< int >::type spinUpYears(spinUpYearsSEXP);
    Rcpp::traits::input_parameter< int >::type spinUpCycles(spinUpCyclesSEXP);
    Rcpp::traits::input_parameter< double >::type manningN(manningNSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vMonthConv(vMonthConvSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beaverCoeff(beaverCoeffSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type hillslopeLengths(hillslopeLengthsSEXP);
    rcpp_result_gen = Rcpp::wrap(routeWaterLoop(timeLength, edgeIDs, orders, streamLengths, streamWidths, streamSlopes, aCoeffs, Rsurf, Rsub, by, parentList, spinUpYears, spinUpCycles, manningN, vMonthConv, beaverCoeff, hillslopeLengths));
    return rcpp_result_gen;
END_RCPP
}
// routeWaterLoopImprov
List routeWaterLoopImprov(int timeLength, CharacterVector edgeIDs, IntegerVector orders, NumericVector streamLengths, NumericVector streamWidths, NumericVector streamSlopes, NumericVector aCoeffs, NumericMatrix Rsurf, NumericMatrix Rsub, String by, List parentList, int spinUpYears, int spinUpCycles, double manningN, NumericVector vMonthConv, double beaverCoeff, NumericVector hillslopeLengths);
RcppExport SEXP _msuwcRouting_routeWaterLoopImprov(SEXP timeLengthSEXP, SEXP edgeIDsSEXP, SEXP ordersSEXP, SEXP streamLengthsSEXP, SEXP streamWidthsSEXP, SEXP streamSlopesSEXP, SEXP aCoeffsSEXP, SEXP RsurfSEXP, SEXP RsubSEXP, SEXP bySEXP, SEXP parentListSEXP, SEXP spinUpYearsSEXP, SEXP spinUpCyclesSEXP, SEXP manningNSEXP, SEXP vMonthConvSEXP, SEXP beaverCoeffSEXP, SEXP hillslopeLengthsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type timeLength(timeLengthSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type edgeIDs(edgeIDsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type orders(ordersSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type streamLengths(streamLengthsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type streamWidths(streamWidthsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type streamSlopes(streamSlopesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type aCoeffs(aCoeffsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Rsurf(RsurfSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Rsub(RsubSEXP);
    Rcpp::traits::input_parameter< String >::type by(bySEXP);
    Rcpp::traits::input_parameter< List >::type parentList(parentListSEXP);
    Rcpp::traits::input_parameter< int >::type spinUpYears(spinUpYearsSEXP);
    Rcpp::traits::input_parameter< int >::type spinUpCycles(spinUpCyclesSEXP);
    Rcpp::traits::input_parameter< double >::type manningN(manningNSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vMonthConv(vMonthConvSEXP);
    Rcpp::traits::input_parameter< double >::type beaverCoeff(beaverCoeffSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type hillslopeLengths(hillslopeLengthsSEXP);
    rcpp_result_gen = Rcpp::wrap(routeWaterLoopImprov(timeLength, edgeIDs, orders, streamLengths, streamWidths, streamSlopes, aCoeffs, Rsurf, Rsub, by, parentList, spinUpYears, spinUpCycles, manningN, vMonthConv, beaverCoeff, hillslopeLengths));
    return rcpp_result_gen;
END_RCPP
}
// streamTempLoop
List streamTempLoop(int timeLength, CharacterVector edgeIDs, IntegerVector orders, NumericMatrix velocities, NumericVector lengths, NumericMatrix RsurfSnow, NumericMatrix RsurfNoSnow, NumericMatrix flowqSub, NumericMatrix flowqOut, NumericMatrix flowqIn, NumericMatrix flowsRiv, NumericVector annualTmean, String by, List parentList, double K, NumericMatrix Tair);
RcppExport SEXP _msuwcRouting_streamTempLoop(SEXP timeLengthSEXP, SEXP edgeIDsSEXP, SEXP ordersSEXP, SEXP velocitiesSEXP, SEXP lengthsSEXP, SEXP RsurfSnowSEXP, SEXP RsurfNoSnowSEXP, SEXP flowqSubSEXP, SEXP flowqOutSEXP, SEXP flowqInSEXP, SEXP flowsRivSEXP, SEXP annualTmeanSEXP, SEXP bySEXP, SEXP parentListSEXP, SEXP KSEXP, SEXP TairSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type timeLength(timeLengthSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type edgeIDs(edgeIDsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type orders(ordersSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type velocities(velocitiesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lengths(lengthsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type RsurfSnow(RsurfSnowSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type RsurfNoSnow(RsurfNoSnowSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type flowqSub(flowqSubSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type flowqOut(flowqOutSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type flowqIn(flowqInSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type flowsRiv(flowsRivSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type annualTmean(annualTmeanSEXP);
    Rcpp::traits::input_parameter< String >::type by(bySEXP);
    Rcpp::traits::input_parameter< List >::type parentList(parentListSEXP);
    Rcpp::traits::input_parameter< double >::type K(KSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Tair(TairSEXP);
    rcpp_result_gen = Rcpp::wrap(streamTempLoop(timeLength, edgeIDs, orders, velocities, lengths, RsurfSnow, RsurfNoSnow, flowqSub, flowqOut, flowqIn, flowsRiv, annualTmean, by, parentList, K, Tair));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_msuwcRouting_routeWaterLoop", (DL_FUNC) &_msuwcRouting_routeWaterLoop, 17},
    {"_msuwcRouting_routeWaterLoopImprov", (DL_FUNC) &_msuwcRouting_routeWaterLoopImprov, 17},
    {"_msuwcRouting_streamTempLoop", (DL_FUNC) &_msuwcRouting_streamTempLoop, 16},
    {NULL, NULL, 0}
};

RcppExport void R_init_msuwcRouting(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
